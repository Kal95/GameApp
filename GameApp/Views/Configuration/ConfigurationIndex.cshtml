@model IEnumerable<GameConfigurationResponseView>

<h1 class="mt-3">Game Configurations</h1>

<div class="mt-3">
    <a class="btn btn-primary" href="@Url.Action("AddConfiguration")">Add Configuration</a>
</div>

<table class="table table-bordered table-striped mt-3">
    <thead>
        <tr>
            <th>Game Name</th>
            <th>Price</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var config in Model)
        {
            <tr>
                <td>@config.GameName</td>
                <td>@config.PricePerHour</td>
                <td>
                    <a class="btn btn-warning" href="@Url.Action("EditConfiguration", new { id = config.Id })">Edit</a>
                    <a class="btn btn-danger" href="#" data-delete-url="@Url.Action("DeleteConfiguration", new { id = config.Id })" data-id="@config.Id" onclick="confirmDelete(this)">Delete</a>


                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    function confirmDelete(element) {
        var deleteUrl = element.getAttribute('data-delete-url');
        var id = element.getAttribute('data-id');

        // Show a confirmation dialog
        if (confirm('Are you sure you want to delete this configuration?')) {
            // If confirmed, make an AJAX request to the delete URL
            fetch(deleteUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ id: id }) // Include the id in the request body
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.isSuccessful) {
                        // Reload the page or update the UI as needed
                        location.reload();
                    } else {
                        alert('Failed to delete configuration: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the configuration.');
                });
        }
    }


</script>

